• In this chapter, we discuss 4 components related to device drivers and device management:
i)   Device types: Classifications used in all Unix systems to unify behavior of common devices.
ii)  Modules: The mechanism by which the Linux kernel can load and unload object code on demand.
iii) Kernel objects: Support for adding simple object-oriented behavior and a parent/child relationship to kernel data structures.
iv)  Sysfs: A filesystem representation of the system's device tree.

1. Device types:
• Block devices:
Abbreviated as blkdevs, block devices are addressable in device-specified chunks called blocks and generally support seeking, the random access of data. Block devices are accessed via a special file called a block device node and generally mounted as a filesystem.
• Character devices:
Abbreviated as cdevs, character devices are generally not addressable, providing access to data only as a stream, generally of characters(bytes). Example cdevs include keyboards, mice, printers, and most pseudo-devices. cdevs are accessed via a special file called a character device node. Unlike with block devices, applications interact with cdevs directly through their device node.
• Netwoek devices:
Network devices provide access to a network via a physical adapter and a specific protocol. Breaking Unix's "everything is a file" design principle, network devices are not accessed via a device node but with a special interface called the socket API.


